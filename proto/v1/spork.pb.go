// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/v1/spork.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VersionRequest) Reset() {
	*x = VersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_spork_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRequest) ProtoMessage() {}

func (x *VersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_spork_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRequest.ProtoReflect.Descriptor instead.
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_spork_proto_rawDescGZIP(), []int{0}
}

type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	BackendMode string `protobuf:"bytes,2,opt,name=backendMode,proto3" json:"backendMode,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_spork_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_spork_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_spork_proto_rawDescGZIP(), []int{1}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VersionResponse) GetBackendMode() string {
	if x != nil {
		return x.BackendMode
	}
	return ""
}

type SyncSporkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncSporkRequest) Reset() {
	*x = SyncSporkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_spork_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncSporkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncSporkRequest) ProtoMessage() {}

func (x *SyncSporkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_spork_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncSporkRequest.ProtoReflect.Descriptor instead.
func (*SyncSporkRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_spork_proto_rawDescGZIP(), []int{2}
}

type SyncSporkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spork string `protobuf:"bytes,1,opt,name=spork,proto3" json:"spork,omitempty"`
}

func (x *SyncSporkResponse) Reset() {
	*x = SyncSporkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_spork_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncSporkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncSporkResponse) ProtoMessage() {}

func (x *SyncSporkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_spork_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncSporkResponse.ProtoReflect.Descriptor instead.
func (*SyncSporkResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_spork_proto_rawDescGZIP(), []int{3}
}

func (x *SyncSporkResponse) GetSpork() string {
	if x != nil {
		return x.Spork
	}
	return ""
}

type QueryEventByBlockRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event string `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Start uint64 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End   uint64 `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *QueryEventByBlockRangeRequest) Reset() {
	*x = QueryEventByBlockRangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_spork_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEventByBlockRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEventByBlockRangeRequest) ProtoMessage() {}

func (x *QueryEventByBlockRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_spork_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEventByBlockRangeRequest.ProtoReflect.Descriptor instead.
func (*QueryEventByBlockRangeRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_spork_proto_rawDescGZIP(), []int{4}
}

func (x *QueryEventByBlockRangeRequest) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *QueryEventByBlockRangeRequest) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *QueryEventByBlockRangeRequest) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

type QueryEventByBlockRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*QueryEventByBlockRangeResponseEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *QueryEventByBlockRangeResponse) Reset() {
	*x = QueryEventByBlockRangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_spork_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEventByBlockRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEventByBlockRangeResponse) ProtoMessage() {}

func (x *QueryEventByBlockRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_spork_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEventByBlockRangeResponse.ProtoReflect.Descriptor instead.
func (*QueryEventByBlockRangeResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_spork_proto_rawDescGZIP(), []int{5}
}

func (x *QueryEventByBlockRangeResponse) GetEvents() []*QueryEventByBlockRangeResponseEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type QueryEventByBlockRangeResponseEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId       uint64                                 `protobuf:"varint,1,opt,name=blockId,proto3" json:"blockId,omitempty"`
	EventID       string                                 `protobuf:"bytes,2,opt,name=eventID,proto3" json:"eventID,omitempty"`
	Index         int64                                  `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Type          string                                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	TransactionId string                                 `protobuf:"bytes,5,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	Values        []*QueryEventByBlockRangeResponseValue `protobuf:"bytes,6,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *QueryEventByBlockRangeResponseEvent) Reset() {
	*x = QueryEventByBlockRangeResponseEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_spork_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEventByBlockRangeResponseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEventByBlockRangeResponseEvent) ProtoMessage() {}

func (x *QueryEventByBlockRangeResponseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_spork_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEventByBlockRangeResponseEvent.ProtoReflect.Descriptor instead.
func (*QueryEventByBlockRangeResponseEvent) Descriptor() ([]byte, []int) {
	return file_proto_v1_spork_proto_rawDescGZIP(), []int{6}
}

func (x *QueryEventByBlockRangeResponseEvent) GetBlockId() uint64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

func (x *QueryEventByBlockRangeResponseEvent) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *QueryEventByBlockRangeResponseEvent) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *QueryEventByBlockRangeResponseEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QueryEventByBlockRangeResponseEvent) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *QueryEventByBlockRangeResponseEvent) GetValues() []*QueryEventByBlockRangeResponseValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type QueryEventByBlockRangeResponseValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *QueryEventByBlockRangeResponseValue) Reset() {
	*x = QueryEventByBlockRangeResponseValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_spork_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEventByBlockRangeResponseValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEventByBlockRangeResponseValue) ProtoMessage() {}

func (x *QueryEventByBlockRangeResponseValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_spork_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEventByBlockRangeResponseValue.ProtoReflect.Descriptor instead.
func (*QueryEventByBlockRangeResponseValue) Descriptor() ([]byte, []int) {
	return file_proto_v1_spork_proto_rawDescGZIP(), []int{7}
}

func (x *QueryEventByBlockRangeResponseValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryEventByBlockRangeResponseValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type QueryLatestBlockHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryLatestBlockHeightRequest) Reset() {
	*x = QueryLatestBlockHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_spork_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLatestBlockHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLatestBlockHeightRequest) ProtoMessage() {}

func (x *QueryLatestBlockHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_spork_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLatestBlockHeightRequest.ProtoReflect.Descriptor instead.
func (*QueryLatestBlockHeightRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_spork_proto_rawDescGZIP(), []int{8}
}

type QueryLatestBlockHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatestBlockHeight uint64 `protobuf:"varint,1,opt,name=latestBlockHeight,proto3" json:"latestBlockHeight,omitempty"`
}

func (x *QueryLatestBlockHeightResponse) Reset() {
	*x = QueryLatestBlockHeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_spork_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLatestBlockHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLatestBlockHeightResponse) ProtoMessage() {}

func (x *QueryLatestBlockHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_spork_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLatestBlockHeightResponse.ProtoReflect.Descriptor instead.
func (*QueryLatestBlockHeightResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_spork_proto_rawDescGZIP(), []int{9}
}

func (x *QueryLatestBlockHeightResponse) GetLatestBlockHeight() uint64 {
	if x != nil {
		return x.LatestBlockHeight
	}
	return 0
}

var File_proto_v1_spork_proto protoreflect.FileDescriptor

var file_proto_v1_spork_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x6f, 0x72, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x22, 0x10, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x4d, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64,
	0x65, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x70, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x29, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x70, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70,
	0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x6f, 0x72, 0x6b,
	0x22, 0x5d, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x79,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22,
	0x67, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xf0, 0x01, 0x0a, 0x23, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x23, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x1d,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a,
	0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x32, 0xef, 0x02,
	0x0a, 0x05, 0x53, 0x70, 0x6f, 0x72, 0x6b, 0x12, 0x40, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x53, 0x79, 0x6e,
	0x63, 0x53, 0x70, 0x6f, 0x72, 0x6b, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x70, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x70, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6d, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42,
	0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x27, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6d, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x61,
	0x74, 0x72, 0x69, 0x78, 0x4c, 0x61, 0x62, 0x73, 0x54, 0x65, 0x63, 0x68, 0x2f, 0x66, 0x6c, 0x6f,
	0x77, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_spork_proto_rawDescOnce sync.Once
	file_proto_v1_spork_proto_rawDescData = file_proto_v1_spork_proto_rawDesc
)

func file_proto_v1_spork_proto_rawDescGZIP() []byte {
	file_proto_v1_spork_proto_rawDescOnce.Do(func() {
		file_proto_v1_spork_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_spork_proto_rawDescData)
	})
	return file_proto_v1_spork_proto_rawDescData
}

var file_proto_v1_spork_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_v1_spork_proto_goTypes = []interface{}{
	(*VersionRequest)(nil),                      // 0: proto.v1.VersionRequest
	(*VersionResponse)(nil),                     // 1: proto.v1.VersionResponse
	(*SyncSporkRequest)(nil),                    // 2: proto.v1.SyncSporkRequest
	(*SyncSporkResponse)(nil),                   // 3: proto.v1.SyncSporkResponse
	(*QueryEventByBlockRangeRequest)(nil),       // 4: proto.v1.QueryEventByBlockRangeRequest
	(*QueryEventByBlockRangeResponse)(nil),      // 5: proto.v1.QueryEventByBlockRangeResponse
	(*QueryEventByBlockRangeResponseEvent)(nil), // 6: proto.v1.QueryEventByBlockRangeResponseEvent
	(*QueryEventByBlockRangeResponseValue)(nil), // 7: proto.v1.QueryEventByBlockRangeResponseValue
	(*QueryLatestBlockHeightRequest)(nil),       // 8: proto.v1.QueryLatestBlockHeightRequest
	(*QueryLatestBlockHeightResponse)(nil),      // 9: proto.v1.QueryLatestBlockHeightResponse
}
var file_proto_v1_spork_proto_depIdxs = []int32{
	6, // 0: proto.v1.QueryEventByBlockRangeResponse.events:type_name -> proto.v1.QueryEventByBlockRangeResponseEvent
	7, // 1: proto.v1.QueryEventByBlockRangeResponseEvent.values:type_name -> proto.v1.QueryEventByBlockRangeResponseValue
	0, // 2: proto.v1.Spork.Version:input_type -> proto.v1.VersionRequest
	2, // 3: proto.v1.Spork.SyncSpork:input_type -> proto.v1.SyncSporkRequest
	4, // 4: proto.v1.Spork.QueryEventByBlockRange:input_type -> proto.v1.QueryEventByBlockRangeRequest
	8, // 5: proto.v1.Spork.QueryLatestBlockHeight:input_type -> proto.v1.QueryLatestBlockHeightRequest
	1, // 6: proto.v1.Spork.Version:output_type -> proto.v1.VersionResponse
	3, // 7: proto.v1.Spork.SyncSpork:output_type -> proto.v1.SyncSporkResponse
	5, // 8: proto.v1.Spork.QueryEventByBlockRange:output_type -> proto.v1.QueryEventByBlockRangeResponse
	9, // 9: proto.v1.Spork.QueryLatestBlockHeight:output_type -> proto.v1.QueryLatestBlockHeightResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_v1_spork_proto_init() }
func file_proto_v1_spork_proto_init() {
	if File_proto_v1_spork_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_v1_spork_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_spork_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_spork_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncSporkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_spork_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncSporkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_spork_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEventByBlockRangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_spork_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEventByBlockRangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_spork_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEventByBlockRangeResponseEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_spork_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEventByBlockRangeResponseValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_spork_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryLatestBlockHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_spork_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryLatestBlockHeightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_spork_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_spork_proto_goTypes,
		DependencyIndexes: file_proto_v1_spork_proto_depIdxs,
		MessageInfos:      file_proto_v1_spork_proto_msgTypes,
	}.Build()
	File_proto_v1_spork_proto = out.File
	file_proto_v1_spork_proto_rawDesc = nil
	file_proto_v1_spork_proto_goTypes = nil
	file_proto_v1_spork_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SporkClient is the client API for Spork service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SporkClient interface {
	Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error)
	SyncSpork(ctx context.Context, in *SyncSporkRequest, opts ...grpc.CallOption) (*SyncSporkResponse, error)
	QueryEventByBlockRange(ctx context.Context, in *QueryEventByBlockRangeRequest, opts ...grpc.CallOption) (*QueryEventByBlockRangeResponse, error)
	QueryLatestBlockHeight(ctx context.Context, in *QueryLatestBlockHeightRequest, opts ...grpc.CallOption) (*QueryLatestBlockHeightResponse, error)
}

type sporkClient struct {
	cc grpc.ClientConnInterface
}

func NewSporkClient(cc grpc.ClientConnInterface) SporkClient {
	return &sporkClient{cc}
}

func (c *sporkClient) Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/proto.v1.Spork/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sporkClient) SyncSpork(ctx context.Context, in *SyncSporkRequest, opts ...grpc.CallOption) (*SyncSporkResponse, error) {
	out := new(SyncSporkResponse)
	err := c.cc.Invoke(ctx, "/proto.v1.Spork/SyncSpork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sporkClient) QueryEventByBlockRange(ctx context.Context, in *QueryEventByBlockRangeRequest, opts ...grpc.CallOption) (*QueryEventByBlockRangeResponse, error) {
	out := new(QueryEventByBlockRangeResponse)
	err := c.cc.Invoke(ctx, "/proto.v1.Spork/QueryEventByBlockRange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sporkClient) QueryLatestBlockHeight(ctx context.Context, in *QueryLatestBlockHeightRequest, opts ...grpc.CallOption) (*QueryLatestBlockHeightResponse, error) {
	out := new(QueryLatestBlockHeightResponse)
	err := c.cc.Invoke(ctx, "/proto.v1.Spork/QueryLatestBlockHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SporkServer is the server API for Spork service.
type SporkServer interface {
	Version(context.Context, *VersionRequest) (*VersionResponse, error)
	SyncSpork(context.Context, *SyncSporkRequest) (*SyncSporkResponse, error)
	QueryEventByBlockRange(context.Context, *QueryEventByBlockRangeRequest) (*QueryEventByBlockRangeResponse, error)
	QueryLatestBlockHeight(context.Context, *QueryLatestBlockHeightRequest) (*QueryLatestBlockHeightResponse, error)
}

// UnimplementedSporkServer can be embedded to have forward compatible implementations.
type UnimplementedSporkServer struct {
}

func (*UnimplementedSporkServer) Version(context.Context, *VersionRequest) (*VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}
func (*UnimplementedSporkServer) SyncSpork(context.Context, *SyncSporkRequest) (*SyncSporkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncSpork not implemented")
}
func (*UnimplementedSporkServer) QueryEventByBlockRange(context.Context, *QueryEventByBlockRangeRequest) (*QueryEventByBlockRangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryEventByBlockRange not implemented")
}
func (*UnimplementedSporkServer) QueryLatestBlockHeight(context.Context, *QueryLatestBlockHeightRequest) (*QueryLatestBlockHeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryLatestBlockHeight not implemented")
}

func RegisterSporkServer(s *grpc.Server, srv SporkServer) {
	s.RegisterService(&_Spork_serviceDesc, srv)
}

func _Spork_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SporkServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v1.Spork/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SporkServer).Version(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spork_SyncSpork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncSporkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SporkServer).SyncSpork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v1.Spork/SyncSpork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SporkServer).SyncSpork(ctx, req.(*SyncSporkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spork_QueryEventByBlockRange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryEventByBlockRangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SporkServer).QueryEventByBlockRange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v1.Spork/QueryEventByBlockRange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SporkServer).QueryEventByBlockRange(ctx, req.(*QueryEventByBlockRangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spork_QueryLatestBlockHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryLatestBlockHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SporkServer).QueryLatestBlockHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v1.Spork/QueryLatestBlockHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SporkServer).QueryLatestBlockHeight(ctx, req.(*QueryLatestBlockHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Spork_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.v1.Spork",
	HandlerType: (*SporkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _Spork_Version_Handler,
		},
		{
			MethodName: "SyncSpork",
			Handler:    _Spork_SyncSpork_Handler,
		},
		{
			MethodName: "QueryEventByBlockRange",
			Handler:    _Spork_QueryEventByBlockRange_Handler,
		},
		{
			MethodName: "QueryLatestBlockHeight",
			Handler:    _Spork_QueryLatestBlockHeight_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/v1/spork.proto",
}
